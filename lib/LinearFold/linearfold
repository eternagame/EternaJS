#!/usr/bin/env python2

import gflags as flags
import subprocess
import sys
import os

FLAGS = flags.FLAGS

def setgflags():
    flags.DEFINE_integer('b', 100, "set beam size, (DEFAULT=100)")
    flags.DEFINE_boolean('V', False, "use vienna parameters, (DEFAULT=FALSE)")
    flags.DEFINE_boolean('sharpturn', False, "enable sharp turn in prediction, (DEFAULT=FALSE)")
    flags.DEFINE_boolean('verbose', False, "print out energy of each loop in the structure, (DEFAULT=FALSE)")
    flags.DEFINE_boolean('eval', False, "print out energy of a given structure, (DEFAULT=FALSE)") # adding eval mode
    argv = FLAGS(sys.argv)

def main():
    use_vienna = FLAGS.V
    beamsize = str(FLAGS.b)
    is_sharpturn = '1' if FLAGS.sharpturn else '0'
    is_verbose = '1' if FLAGS.verbose else '0'
    is_eval = '1' if FLAGS.eval else '0'

    path = os.path.dirname(os.path.abspath(__file__))
    cmd = ["%s/%s" % (path, ('linearfold_v' if use_vienna else 'linearfold_c')), beamsize, is_sharpturn, is_verbose, is_eval]
    subprocess.call(cmd, stdin=sys.stdin)
    
if __name__ == '__main__':
    setgflags()
    main()

