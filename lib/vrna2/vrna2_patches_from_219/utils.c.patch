15c15
< #include "../config.h"
---
> #include "config.h"
34a35
> 
1001d1001
< 
1018,1048c1018,1052
<       switch(constraint[j-1]){
<         case '|':   if(BP) BP[j] = -1;
<                     break;
<         case 'x':   /* can't pair */
<                     for (l=1; l<j-min_loop_size; l++) ptype[index[j]+l] = 0;
<                     for (l=j+min_loop_size+1; l<=(int)length; l++) ptype[index[l]+j] = 0;
<                     break;
<         case '(':   stack[hx++]=j;
<                     /* fallthrough */
<         case '<':   /* pairs upstream */
<                     for (l=1; l<j-min_loop_size; l++) ptype[index[j]+l] = 0;
<                     break;
<         case ')':   if (hx<=0) {
<                       fprintf(stderr, "%s\n", constraint);
<                       nrerror("unbalanced brackets in constraint");
<                     }
<                     i = stack[--hx];
<                     type = ptype[index[j]+i];
<                     for (k=i+1; k<=(int)length; k++) ptype[index[k]+i] = 0;
<                     /* don't allow pairs i<k<j<l */
<                     for (l=j; l<=(int)length; l++)
<                       for (k=i+1; k<=j; k++) ptype[index[l]+k] = 0;
<                     /* don't allow pairs k<i<l<j */
<                     for (l=i; l<=j; l++)
<                       for (k=1; k<=i; k++) ptype[index[l]+k] = 0;
<                     for (k=1; k<j; k++) ptype[index[j]+k] = 0;
<                     ptype[index[j]+i] = (type==0) ? 7 : type;
<                     /* fallthrough */
<         case '>':   /* pairs downstream */
<                     for (l=j+min_loop_size+1; l<=(int)length; l++) ptype[index[l]+j] = 0;
<                     break;
---
>       if (estimate_mode) {
>         BP[j] = constraint[j-1];
>       } else {
>         switch(constraint[j-1]){
>           case '|':   if(BP) BP[j] = -1;
>                       break;
>           case 'x':   /* can't pair */
>                       for (l=1; l<j-min_loop_size; l++) ptype[index[j]+l] = 0;
>                       for (l=j+min_loop_size+1; l<=(int)length; l++) ptype[index[l]+j] = 0;
>                       break;
>           case '(':   stack[hx++]=j;
>                       /* fallthrough */
>           case '<':   /* pairs upstream */
>                       for (l=1; l<j-min_loop_size; l++) ptype[index[j]+l] = 0;
>                       break;
>           case ')':   if (hx<=0) {
>                         fprintf(stderr, "%s\n", constraint);
>                         nrerror("unbalanced brackets in constraint");
>                       }
>                       i = stack[--hx];
>                       type = ptype[index[j]+i];
>                       for (k=i+1; k<=(int)length; k++) ptype[index[k]+i] = 0;
>                       /* don't allow pairs i<k<j<l */
>                       for (l=j; l<=(int)length; l++)
>                         for (k=i+1; k<=j; k++) ptype[index[l]+k] = 0;
>                       /* don't allow pairs k<i<l<j */
>                       for (l=i; l<=j; l++)
>                         for (k=1; k<=i; k++) ptype[index[l]+k] = 0;
>                       for (k=1; k<j; k++) ptype[index[j]+k] = 0;
>                       ptype[index[j]+i] = (type==0) ? 7 : type;
>                       /* fallthrough */
>           case '>':   /* pairs downstream */
>                       for (l=j+min_loop_size+1; l<=(int)length; l++) ptype[index[l]+j] = 0;
>                       break;
>         }
